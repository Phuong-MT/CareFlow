# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master", "dev"]

jobs:
  build:
    runs-on: ubuntu-latest

    # strategy:
    #   matrix:
    #     node-version: [14.x, 16.x, 18.x]
    # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: latest
      - name: Install Yarn
        run: npm install -g yarn
      - name: Install Dependencies Api
        run: |
          cd api
          yarn install
          yarn build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-api
          path: api/dist
      - name: Install Dependencies And Build In Client
        run: |
          cd client
          yarn install
          yarn build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-client
          path: client/build

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: build-client
          path: client/build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.SERVER_SECRET_KEY }}
          script: |
            ssh-add -D
            ssh-add ${{ secrets.SERVER_SECRET_KEY }}
            ssh-keyscan -t rsa ${{ secrets.HOST }} >> ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
      - name: Deploy client
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} "cd /home/dev/thienphu/client && rm -rf *"
          scp -o StrictHostKeyChecking=no -P ${{ secrets.PORT }} -r client/build/* ${{ secrets.USERNAME }}@${{ secrets.HOST }}:/home/dev/thienphu/client
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.PORT }} ${{ secrets.USERNAME }}@${{ secrets.HOST }} "service nginx reload"
      - name: Deploy nestjs
        run: |
          pwd && ls -la
